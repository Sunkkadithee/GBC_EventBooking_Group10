#---------------------------------------------------------------------------------------------------------------------------
# 1. docker-compose -p mongodb-booking -f docker-compose-booking.yml up -d
#     - This command will start the containers in detached mode (-d) without rebuilding the image (if they exist)
#
# 2. docker-compose -p mongodb-booking -f docker-compose-booking.yml up -d --build
#       - this command fores the rebuild of image, even if they already exist, before starting them.
#
#-----------------------------------------------------------------------------------------------------------------------

version: '3.9'

services:

  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
    volumes:
      - ./data/mongo/bookings:/data/db  # the database will oersist data here on the host machine
      - ./init/mongo/docker-entrypoint-initdb.d/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro # Initialize MongoDB with data from this script.
    container_name: mongodb
    networks:
      - spring

  mongo-express:
    image: mongo-express
    ports:
      - "8083:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=mongodb
    container_name: mongo-express_booking
    depends_on:
      - mongodb
    networks:
      - spring


#optional volumes section persisting data
volumes:
  mongo-db:
    driver: local

networks:
  spring:
    driver: bridge




